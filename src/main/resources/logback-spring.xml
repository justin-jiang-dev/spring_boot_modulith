<?xml version="1.0" encoding="UTF-8"?>
<configuration>
    <include resource="org/springframework/boot/logging/logback/defaults.xml" />

    <springProperty scope="context" name="spring.application.name" source="spring.application.name" />

    <!--定义日志文件的存储地址
    勿在 LogBack 的配置中使用相对路径-->
    <property name="logging.path" value="log" />

    <property name="CONSOLE_LOG_PATTERN"
        value="%clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} %clr(${LOG_LEVEL_PATTERN:-%5p}) %clr([${PID:- }]){magenta} %clr([%X{tid}]){magenta} %clr([%X{requestPath}]){magenta} %clr([%X{requestIp}]){magenta} %clr([%X{userId}]){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-50.50logger{49}){cyan} %clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}" />

    <property name="ROLL_FILE_LOG_PATTERN"
        value="%d{yyyy-MM-dd HH:mm:ss.SSS} ${LOG_LEVEL_PATTERN:-%5p} [${PID:- }] [%X{tid}] [%X{requestPath}] [%X{requestIp}] [%X{userId}] --- [%t] %-50.50logger{49} : %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}}" />


    <!-- 控制台输出 -->
    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <!-- 日志输出编码 -->
        <encoder class="ch.qos.logback.core.encoder.LayoutWrappingEncoder">
            <layout
                class="org.apache.skywalking.apm.toolkit.log.logback.v1.x.mdc.TraceIdMDCPatternLogbackLayout">
                <pattern>${CONSOLE_LOG_PATTERN}</pattern>
            </layout>
        </encoder>
    </appender>

    <!-- 控制台异步输出 -->
    <appender name="STDOUTASYNC" class="ch.qos.logback.classic.AsyncAppender">
        <!-- 不丢失日志.默认的,如果队列的80%已满,则会丢弃TRACT、DEBUG、INFO级别的日志 -->
        <discardingThreshold>0</discardingThreshold>
        <!-- 更改默认的队列的深度,该值会影响性能.默认值为256 -->
        <queueSize>512</queueSize>
        <!-- 添加附加的appender,最多只能添加一个 -->
        <appender-ref ref="STDOUT" />
    </appender>

    <!-- 按照每天生成日志文件 -->
    <appender name="FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${logging.path}/${spring.application.name}.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <!--日志文件输出的文件名-->
            <FileNamePattern>${logging.path}/${spring.application.name}.log.%d{yyyy-MM-dd}.%i.log</FileNamePattern>
            <maxFileSize>100MB</maxFileSize>
            <MaxHistory>30</MaxHistory>
            <totalSizeCap>8GB</totalSizeCap>
        </rollingPolicy>
        <encoder class="ch.qos.logback.core.encoder.LayoutWrappingEncoder">
            <layout
                class="org.apache.skywalking.apm.toolkit.log.logback.v1.x.mdc.TraceIdMDCPatternLogbackLayout">
                <!--格式化输出：%d表示日期，%thread表示线程名，%msg：日志消息，%n是换行符-->
                <pattern>${ROLL_FILE_LOG_PATTERN}</pattern>
            </layout>
        </encoder>
    </appender>

    <!-- 日志文件异步输出 -->
    <appender name="FILEASYNC" class="ch.qos.logback.classic.AsyncAppender">
        <!-- 不丢失日志.默认的,如果队列的80%已满,则会丢弃TRACT、DEBUG、INFO级别的日志 -->
        <discardingThreshold>0</discardingThreshold>
        <!-- 更改默认的队列的深度,该值会影响性能.默认值为256 -->
        <queueSize>512</queueSize>
        <!-- 添加附加的appender,最多只能添加一个 -->
        <appender-ref ref="FILE" />
    </appender>

    <!-- 开发测试环境 -->
    <springProfile name="junit,dev,test">
        <logger name="org.springframework.web.filter.CommonsRequestLoggingFilter" level="DEBUG"
            additivity="false">
            <appender-ref ref="STDOUTASYNC" />
            <appender-ref ref="FILEASYNC" />
        </logger>
        <logger name="com.nuoson" level="DEBUG" additivity="false">
            <appender-ref ref="STDOUTASYNC" />
            <appender-ref ref="FILEASYNC" />
        </logger>
        <root level="DEBUG">
            <appender-ref ref="STDOUTASYNC" />
            <appender-ref ref="FILEASYNC" />
        </root>
    </springProfile>

    <!-- 生产环境 -->
    <springProfile name="preview,prod">
        <root level="INFO">
            <appender-ref ref="STDOUTASYNC" />
            <appender-ref ref="FILEASYNC" />
        </root>
    </springProfile>

</configuration>